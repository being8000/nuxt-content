[{"_path":"/deployments/21yunbox","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"21YunBox","description":"How to deploy Nuxt on 21YunBox?","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"deploy-nuxt-on-21yunbox"},"children":[{"type":"text","value":"Deploy Nuxt on 21YunBox"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"How to deploy Nuxt on 21YunBox?"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.21yunbox.com","rel":["nofollow"]},"children":[{"type":"text","value":"21YunBox"}]},{"type":"text","value":" provides blazing fast Chinese CDN, continuous deployment, one-click HTTPS and "},{"type":"element","tag":"a","props":{"href":"https://www.21yunbox.com/docs/","rel":["nofollow"]},"children":[{"type":"text","value":"other services like managed databases and backend web services"}]},{"type":"text","value":", providing an avenue to launch web projects in China."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"21YunBox includes the following features:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Continuous, automatic builds & deploys from GitHub and Gitee"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Automatic SSL certificates through "},{"type":"element","tag":"a","props":{"href":"https://letsencrypt.org","rel":["nofollow"]},"children":[{"type":"text","value":"Let's Encrypt"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Instant cache invalidation with a blazing fast, Chinese CDN"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Unlimited "},{"type":"element","tag":"a","props":{"href":"https://www.21yunbox.com/docs/#/custom-domains","rel":["nofollow"]},"children":[{"type":"text","value":"custom domains"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Automatic "},{"type":"element","tag":"a","props":{"href":"https://en.wikipedia.org/wiki/Brotli","rel":["nofollow"]},"children":[{"type":"text","value":"Brotli compression"}]},{"type":"text","value":" for faster sites"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Native HTTP/2 support"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Automatic HTTP â†’ HTTPS redirects"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Custom URL redirects and rewrites"}]}]},{"type":"element","tag":"h2","props":{"id":"prerequisites"},"children":[{"type":"text","value":"Prerequisites"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This guide assumes you already have a Nuxt project to deploy. If you need a project, use the "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/create-nuxt-app","rel":["nofollow"]},"children":[{"type":"text","value":"create-nuxt-app"}]},{"type":"text","value":" to get started or fork 21YunBox's "},{"type":"element","tag":"a","props":{"href":"https://gitee.com/eryiyunbox-examples/nuxtjs","rel":["nofollow"]},"children":[{"type":"text","value":"Nuxt Example"}]},{"type":"text","value":" before continuing."}]},{"type":"element","tag":"h2","props":{"id":"setup"},"children":[{"type":"text","value":"Setup"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can set up a Nuxt site on 21YunBox in two quick steps:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create a new web service on 21YunBox, and give 21YunBox permission to access your GitHub or Gitee repo."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use the following values during creation:"},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":null},"children":[]},{"type":"element","tag":"th","props":{"align":null},"children":[]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Environment"}]}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Static Site"}]}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Build Command"}]}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"yarn && yarn generate"}]},{"type":"text","value":" (or your own build command)"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Publish Directory"}]}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"./dist"}]},{"type":"text","value":" (or your own output directory)"}]}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"That's it! Your site will be live on your 21YunBox URL (which looks like "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"yoursite.21yunbox.com"}]},{"type":"text","value":") as soon as the build is done."}]},{"type":"element","tag":"h2","props":{"id":"continuous-deploys"},"children":[{"type":"text","value":"Continuous deploys"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now that 21YunBox is connected to your repo, it will automatically build and publish your site any time you push to GitHub."}]},{"type":"element","tag":"h2","props":{"id":"21yunbox-cdn-and-cache-invalidation"},"children":[{"type":"text","value":"21YunBox CDN and cache invalidation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"21YunBox hosts your site on a Chinese, blazing fast CDN which ensures the fastest possible download times for all your users across China."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Every deploy automatically and instantly invalidates the CDN cache, so your users can always access the latest content on your site."}]},{"type":"element","tag":"h2","props":{"id":"custom-domains"},"children":[{"type":"text","value":"Custom domains"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add your own domains to your site easily using 21YunBox's "},{"type":"element","tag":"a","props":{"href":"https://www.21yunbox.com/docs/#/custom-domains","rel":["nofollow"]},"children":[{"type":"text","value":"custom domains"}]},{"type":"text","value":" guide."}]}]},"template":"guide","target":"Static","category":"deployment","logo":{"light":"/img/companies/square/light/Yunbox.svg","dark":"/img/companies/square/dark/Yunbox.svg"},"_type":"markdown","_id":"content:deployments:21yunbox.md","_source":"content","_file":"deployments/21yunbox.md","_extension":"md"},{"_path":"/deployments/azure-portal","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Azure Portal","description":"How to deploy a Nuxt application on Azure Portal?","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"deploy-nuxt-on-azure-portal"},"children":[{"type":"text","value":"Deploy Nuxt on Azure Portal"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"How to deploy a Nuxt application on Azure Portal?"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"requirements"},"children":[{"type":"text","value":"Requirements"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"It is required that you select a backend when setting up the project. Even if you don't need it, or else the site won't start up."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The server is running Node 8 or greater"}]}]},{"type":"element","tag":"h2","props":{"id":"what-if-i-already-have-a-project-without-a-backend"},"children":[{"type":"text","value":"What if I already have a project without a backend?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"No worries. It is easy to add an express server to an existing project."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Create a new folder called "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"server"}]},{"type":"text","value":" in the root of the project. Then create an "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"index.js"}]},{"type":"text","value":" file inside the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"server"}]},{"type":"text","value":" folder and paste the following inside the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"index.js"}]},{"type":"text","value":":"}]},{"type":"element","tag":"code","props":{"code":"const express = require('express')\r\nconst consola = require('consola')\r\nconst { loadNuxt } = require('nuxt-start')\r\nconst app = express()\r\n\r\nasync function start () {\r\n  const nuxt = await loadNuxt(isDev ? 'dev' : 'start')\r\n  await nuxt.listen(process.env.PORT, process.env.HOST)\r\n}\r\n\r\nstart()\r\n\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const express = require('express')\r\nconst consola = require('consola')\r\nconst { loadNuxt } = require('nuxt-start')\r\nconst app = express()\r\n\r\nasync function start () {\r\n  const nuxt = await loadNuxt(isDev ? 'dev' : 'start')\r\n  await nuxt.listen(process.env.PORT, process.env.HOST)\r\n}\r\n\r\nstart()\r\n\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Then edit your nuxt.config.js:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Before:"}]},{"type":"element","tag":"code","props":{"code":"import pkg from './package'\r\n\r\nexport default {\r\n... config\r\n}\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"import pkg from './package'\r\n\r\nexport default {\r\n... config\r\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After:"}]},{"type":"element","tag":"code","props":{"code":"module.exports = {\r\n... config\r\n}\r\n\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"module.exports = {\r\n... config\r\n}\r\n\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Remember to remove the references to the pkg object inside the config."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"That's it!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For an Azure App Service deployment, make sure you set the following two environment variables (application settings) in App Service â€º Settings â€º Configuration â€º Application settings."}]},{"type":"element","tag":"code","props":{"code":"HOST: '0.0.0.0'\r\nNODE_ENV: 'production'\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"HOST: '0.0.0.0'\r\nNODE_ENV: 'production'\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"how-to-set-node-version-on-web-app-in-devops"},"children":[{"type":"text","value":"How to set Node version on Web App in DevOps"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can set the Node version on the server, via the App setting inside the \"Deploy Azure Web Service\" task in the release pipeline"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add this to the App settings field under \"Application and Configuration Settings\""}]},{"type":"element","tag":"code","props":{"code":"-WEBSITE_NODE_DEFAULT_VERSION 10.16.3\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"-WEBSITE_NODE_DEFAULT_VERSION 10.16.3\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It's recommended to use the LTS version."}]},{"type":"element","tag":"h2","props":{"id":"artifacts"},"children":[{"type":"text","value":"Artifacts"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you are using Azure DevOps and let the build pipeline do its work you and want to store artifacts. Files which are prefixed with a "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"."}]},{"type":"text","value":" must be moved to the artifact folder explicitly. Then you can create an Artifact Archive and download it afterwards in your Release Deployment."}]},{"type":"element","tag":"h2","props":{"id":"running-the-webserver"},"children":[{"type":"text","value":"Running the webserver"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For Azure Portal you will need a "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"web.config"}]},{"type":"text","value":" file. If not supplied, it will create one itself. This one "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"won't work for Nuxt"}]},{"type":"text","value":" though. Add a web.config file to your repository. For the latest version of "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Nuxt"}]},{"type":"text","value":" the server file is located at "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"server/index.js"}]},{"type":"text","value":". In the web.config you don't specify the exact path "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"server/index.js"}]},{"type":"text","value":" but just "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"server"}]},{"type":"text","value":". See the example web.config below. If you don't do this the logs will tell you that Vue cannot find any routes."}]},{"type":"element","tag":"code","props":{"code":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--\r\n     This configuration file is required if iisnode is used to run node processes behind\r\n     IIS or IIS Express.  For more information, visit:\r\n\r\n     https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config\r\n-->\r\n\r\n<configuration>\r\n  <system.webServer>\r\n    <!-- Visit https://azure.microsoft.com/en-us/blog/introduction-to-websockets-on-windows-azure-web-sites/ for more information on WebSocket support -->\r\n    <webSocket enabled=\"false\" />\r\n    <handlers>\r\n      <!-- Indicates that the server.js file is a Node.js site to be handled by the iisnode module -->\r\n      <add name=\"iisnode\" path=\"server\" verb=\"*\" modules=\"iisnode\"/>\r\n    </handlers>\r\n    <rewrite>\r\n      <rules>\r\n        <!-- Do not interfere with requests for node-inspector debugging -->\r\n        <rule name=\"NodeInspector\" patternSyntax=\"ECMAScript\" stopProcessing=\"true\">\r\n          <match url=\"^server\\/debug[\\/]?\" />\r\n        </rule>\r\n\r\n        <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->\r\n        <rule name=\"StaticContent\">\r\n          <action type=\"Rewrite\" url=\"public{REQUEST_URI}\"/>\r\n        </rule>\r\n\r\n        <!-- All other URLs are mapped to the Node.js site entry point -->\r\n        <rule name=\"DynamicContent\">\r\n          <conditions>\r\n            <add input=\"{REQUEST_FILENAME}\" matchType=\"IsFile\" negate=\"True\"/>\r\n          </conditions>\r\n          <action type=\"Rewrite\" url=\"server\"/>\r\n        </rule>\r\n      </rules>\r\n    </rewrite>\r\n\r\n    <!-- 'bin' directory has no special meaning in Node.js and apps can be placed in it -->\r\n    <security>\r\n      <requestFiltering>\r\n        <hiddenSegments>\r\n          <remove segment=\"bin\"/>\r\n        </hiddenSegments>\r\n      </requestFiltering>\r\n    </security>\r\n\r\n    <!-- Make sure error responses are left untouched -->\r\n    <httpErrors existingResponse=\"PassThrough\" />\r\n\r\n    <!--\r\n      You can control how Node is hosted within IIS using the following options:\r\n        * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server\r\n        * node_env: will be propagated to node as NODE_ENV environment variable\r\n        * debuggingEnabled - controls whether the built-in debugger is enabled\r\n\r\n      See https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config for a full list of options\r\n    -->\r\n    <!--<iisnode watchedFiles=\"web.config;*.js\"/>-->\r\n  </system.webServer>\r\n</configuration>\n","language":"xml"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--\r\n     This configuration file is required if iisnode is used to run node processes behind\r\n     IIS or IIS Express.  For more information, visit:\r\n\r\n     https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config\r\n-->\r\n\r\n<configuration>\r\n  <system.webServer>\r\n    <!-- Visit https://azure.microsoft.com/en-us/blog/introduction-to-websockets-on-windows-azure-web-sites/ for more information on WebSocket support -->\r\n    <webSocket enabled=\"false\" />\r\n    <handlers>\r\n      <!-- Indicates that the server.js file is a Node.js site to be handled by the iisnode module -->\r\n      <add name=\"iisnode\" path=\"server\" verb=\"*\" modules=\"iisnode\"/>\r\n    </handlers>\r\n    <rewrite>\r\n      <rules>\r\n        <!-- Do not interfere with requests for node-inspector debugging -->\r\n        <rule name=\"NodeInspector\" patternSyntax=\"ECMAScript\" stopProcessing=\"true\">\r\n          <match url=\"^server\\/debug[\\/]?\" />\r\n        </rule>\r\n\r\n        <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->\r\n        <rule name=\"StaticContent\">\r\n          <action type=\"Rewrite\" url=\"public{REQUEST_URI}\"/>\r\n        </rule>\r\n\r\n        <!-- All other URLs are mapped to the Node.js site entry point -->\r\n        <rule name=\"DynamicContent\">\r\n          <conditions>\r\n            <add input=\"{REQUEST_FILENAME}\" matchType=\"IsFile\" negate=\"True\"/>\r\n          </conditions>\r\n          <action type=\"Rewrite\" url=\"server\"/>\r\n        </rule>\r\n      </rules>\r\n    </rewrite>\r\n\r\n    <!-- 'bin' directory has no special meaning in Node.js and apps can be placed in it -->\r\n    <security>\r\n      <requestFiltering>\r\n        <hiddenSegments>\r\n          <remove segment=\"bin\"/>\r\n        </hiddenSegments>\r\n      </requestFiltering>\r\n    </security>\r\n\r\n    <!-- Make sure error responses are left untouched -->\r\n    <httpErrors existingResponse=\"PassThrough\" />\r\n\r\n    <!--\r\n      You can control how Node is hosted within IIS using the following options:\r\n        * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server\r\n        * node_env: will be propagated to node as NODE_ENV environment variable\r\n        * debuggingEnabled - controls whether the built-in debugger is enabled\r\n\r\n      See https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config for a full list of options\r\n    -->\r\n    <!--<iisnode watchedFiles=\"web.config;*.js\"/>-->\r\n  </system.webServer>\r\n</configuration>\n"}]}]}]}]},"template":"guide","target":"Server","category":"deployment","logo":{"light":"/img/companies/square/light/Azure.svg","dark":"/img/companies/square/dark/Azure.svg"},"_type":"markdown","_id":"content:deployments:azure-portal.md","_source":"content","_file":"deployments/azure-portal.md","_extension":"md"}]